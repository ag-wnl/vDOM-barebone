var g=(t,s={},...u)=>({type:t,props:s,children:u}),f=class{key;constructor(s){this.key=s}},N=t=>{let s=new Proxy({},{get(e,a){return new f(a)}}),u=t(s),o=[],i=m(u,o);return e=>{let a=new Array(o.length);return{mount:h=>{let l=i.cloneNode(!0);h.textContent="",h.appendChild(l);for(let c=0;c<o.length;c++){let n=o[c],r=l;for(let d=0;d<n.path.length;d++)r=r.childNodes[n.path[d]];a[c]=r;let p=e[n.hole];if(n.type==="attribute")r[n.attribute]=p;else if(n.type==="child"){if(p.mount&&typeof p.mount=="function"){p.mount(r);continue}let d=document.createTextNode(p);r.insertBefore(d,r.childNodes[n.index])}}},patch:h=>{for(let l=0;l<o.length;l++){let c=o[l],n=e[c.hole],r=h.props[c.hole];if(n===r)continue;let p=a[l];if(c.type==="attribute")p[c.attribute]=r;else if(c.type==="child"){if(n.patch&&typeof n.patch=="function"){n.patch(h.edits[l].hole);continue}p.childNodes[c.index].textContent=r}}},props:e,edits:o}}},m=(t,s=[],u=[])=>{if(typeof t=="string")return document.createTextNode(t);let o=document.createElement(t.type);if(t.props)for(let i in t.props){let e=t.props[i];if(e instanceof f){s.push({type:"attribute",path:u,attribute:i,hole:e.key});continue}o[i]=e}for(let i=0;i<t.children?.length;i++){let e=t.children[i];if(e instanceof f){s.push({type:"child",path:u,index:i,hole:e.key});continue}o.appendChild(m(e,s,[...u,i]))}return o};export{N as block,g as h,m as render};
//# sourceMappingURL=index.mjs.map